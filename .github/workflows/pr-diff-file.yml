name: PR Diff File & Comment

on:
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review, edited]

permissions:
  contents: write        # commit the diff file on same-repo PRs
  pull-requests: write   # create/update PR comments

concurrency:
  group: pr-diff-${{ github.event.pull_request.number }}
  cancel-in-progress: true

jobs:
  generate-and-comment:
    runs-on: ubuntu-latest

    steps:
      - name: Determine if PR is from same repo
        id: ownership
        shell: bash
        run: |
          if [ "${{ github.event.pull_request.head.repo.full_name }}" = "${{ github.repository }}" ]; then
            echo "same_repo=true" >> "$GITHUB_OUTPUT"
          else
            echo "same_repo=false" >> "$GITHUB_OUTPUT"
          fi

      - name: Checkout PR HEAD (branch if same-repo; detached if fork)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          repository: ${{ github.event.pull_request.head.repo.full_name }}
          ref: ${{ github.event.pull_request.head.ref }}

      - name: Generate diff markdown
        id: diff
        shell: bash
        env:
          BASE_SHA: ${{ github.event.pull_request.base.sha }}
          HEAD_SHA: ${{ github.event.pull_request.head.sha }}
          PR_NUMBER: ${{ github.event.number }}
          REPO: ${{ github.repository }}
        run: |
          mkdir -p docs/context

          git diff --name-status "$BASE_SHA" "$HEAD_SHA" > /tmp/changed.txt || true
          git diff --stat "$BASE_SHA" "$HEAD_SHA" > /tmp/stat.txt || true
          git diff "$BASE_SHA" "$HEAD_SHA" | head -n 4000 > /tmp/diff.patch || true

          {
            echo "# PR #$PR_NUMBER â€” Diff Summary"
            echo
            echo "- **Base (target)**: \`$BASE_SHA\`"
            echo "- **Head (source)**: \`$HEAD_SHA\`"
            echo "- **Repo**: \`$REPO\`"
            echo
            echo "## Changed Files"
            echo
            echo '```txt'
            cat /tmp/changed.txt
            echo '```'
            echo
            echo "## Stats"
            echo
            echo '```txt'
            cat /tmp/stat.txt
            echo '```'
            echo
            echo "## Unified Diff (truncated to first 4000 lines)"
            echo
            echo '```diff'
            cat /tmp/diff.patch
            echo '```'
          } > "docs/context/PR-${PR_NUMBER}.md"

          # Back-compat path for other jobs
          cp "docs/context/PR-${PR_NUMBER}.md" context-bundle.md

          echo "diff_path=docs/context/PR-${PR_NUMBER}.md" >> "$GITHUB_OUTPUT"
          echo "head_sha=$HEAD_SHA" >> "$GITHUB_OUTPUT"

      - name: Commit diff file to PR branch (same-repo only)
        if: steps.ownership.outputs.same_repo == 'true'
        id: commit
        shell: bash
        env:
          PR_BRANCH: ${{ github.event.pull_request.head.ref }}
        run: |
          git config user.name  "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add docs/context/PR-*.md context-bundle.md || true
          if git diff --cached --quiet; then
            echo "No changes to commit."
          else
            git commit -m "docs: update PR diff for #${{ github.event.number }}"
            git push origin "HEAD:${PR_BRANCH}"
          fi
          # Capture post-commit SHA so Snapshot points to the commit that actually contains the file
          echo "post_commit_sha=$(git rev-parse HEAD)" >> "$GITHUB_OUTPUT"
