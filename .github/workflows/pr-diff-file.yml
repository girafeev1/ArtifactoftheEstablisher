name: PR Diff File & Comment

on:
  pull_request:
    types: [opened, synchronize, reopened, edited]

permissions:
  contents: write
  pull-requests: write

concurrency:
  group: pr-diff-${{ github.event.pull_request.number }}
  cancel-in-progress: true

jobs:
  generate_and_comment:
    runs-on: ubuntu-latest
    steps:
      - name: Check PR source
        id: ownership
        run: |
          if [ "${{ github.event.pull_request.head.repo.full_name }}" = "${{ github.repository }}" ]; then
            echo "same_repo=true" >> $GITHUB_OUTPUT
          else
            echo "same_repo=false" >> $GITHUB_OUTPUT
          fi

      - name: Checkout PR HEAD
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          repository: ${{ github.event.pull_request.head.repo.full_name }}
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Generate diff bundle
        id: bundle
        env:
          BASE_SHA: ${{ github.event.pull_request.base.sha }}
          HEAD_SHA: ${{ github.event.pull_request.head.sha }}
          PR_NUMBER: ${{ github.event.number }}
        run: |
          mkdir -p docs/context
          git diff --name-status "$BASE_SHA" "$HEAD_SHA" > /tmp/changed.txt || true
          git diff --stat "$BASE_SHA" "$HEAD_SHA" > /tmp/stat.txt || true
          git diff "$BASE_SHA" "$HEAD_SHA" | head -n 4000 > /tmp/diff.patch || true

          {
            echo "# PR #$PR_NUMBER â€” Diff Summary"
            echo
            echo "- **Base**: \`$BASE_SHA\`"
            echo "- **Head**: \`$HEAD_SHA\`"
            echo
            echo "## Changed Files"
            echo
            echo '```txt'
            cat /tmp/changed.txt
            echo '```'
            echo
            echo "## Stats"
            echo
            echo '```txt'
            cat /tmp/stat.txt
            echo '```'
            echo
            echo "## Unified Diff (truncated)"
            echo
            echo '```diff'
            cat /tmp/diff.patch
            echo '```'
          } > "docs/context/PR-${PR_NUMBER}.md"

          # compatibility with other tools
          cp "docs/context/PR-${PR_NUMBER}.md" context-bundle.md

          echo "diff_path=docs/context/PR-${PR_NUMBER}.md" >> $GITHUB_OUTPUT

      - name: Commit diff file back to PR branch (same-repo only)
        if: steps.ownership.outputs.same_repo == 'true'
        env:
          PR_BRANCH: ${{ github.event.pull_request.head.ref }}
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add docs/context/PR-*.md context-bundle.md || true
          if git diff --cached --quiet; then
            echo "No changes to commit."
          else
            git commit -m "docs: update PR diff for #${{ github.event.number }}"
            git push origin "HEAD:${PR_BRANCH}"
          fi

      - name: Compose links
        id: links
        env:
          OWNER_REPO: ${{ github.repository }}
          BRANCH: ${{ github.event.pull_request.head.ref }}
          PR_NUMBER: ${{ github.event.number }}
          HEAD_SHA: ${{ github.event.pull_request.head.sha }}
        run: |
          FILE="docs/context/PR-${PR_NUMBER}.md"
          echo "evergreen=https://github.com/${OWNER_REPO}/blob/${BRANCH}/${FILE}" >> $GITHUB_OUTPUT
          echo "snapshot=https://raw.githubusercontent.com/${OWNER_REPO}/${HEAD_SHA}/${FILE}" >> $GITHUB_OUTPUT

      - name: Post sticky comment with links
        uses: actions/github-script@v7
        env:
          EVERGREEN: ${{ steps.links.outputs.evergreen }}
          SNAPSHOT: ${{ steps.links.outputs.snapshot }}
        with:
          script: |
            const { context, github } = require('@actions/github');
            const pr = context.payload.pull_request;
            const marker = '<!-- pr-diff-file-sticky -->';
            const body = [
              '**Diff file generated.**',
              `- Evergreen: ${process.env.EVERGREEN}`,
              `- Snapshot: ${process.env.SNAPSHOT}`,
              '',
              `_File path:_ docs/context/PR-${pr.number}.md`,
              marker
            ].join('\n');

            const { data: comments } = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: pr.number
            });

            const existing = comments.find(c => c.user?.type === 'Bot' && c.body?.includes(marker));
            if (existing) {
              await github.rest.issues.updateComment({ owner: context.repo.owner, repo: context.repo.repo, comment_id: existing.id, body });
            } else {
              await github.rest.issues.createComment({ owner: context.repo.owner, repo: context.repo.repo, issue_number: pr.number, body });
            }
