name: Deploy to Vercel Production

on:
  push:
    branches: ['main']

permissions:
  contents: read
  deployments: write

concurrency:
  group: vercel-prod-${{ github.ref }}
  cancel-in-progress: true

jobs:
  deploy:
    # Only run on pushes to main and when a Vercel token is configured
    if: github.event_name == 'push' && github.ref == 'refs/heads/main' && secrets.VERCEL_TOKEN != ''
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install dependencies
        run: npm ci

      - name: Install Vercel CLI
        run: npm i -g vercel@latest

      - name: Clean stale .vercel project link
        run: rm -rf .vercel

      - name: Pull production environment
        run: vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}
        env:
          # Use secrets if set, then repo variables, then final fallback to known ids
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID || vars.VERCEL_ORG_ID || 'team_ne7hiLb7J8wyHgGulNGIxGIz' }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID || vars.VERCEL_PROJECT_ID || 'prj_fZtOwXp0ToGe87kfUosIkQgXMEQY' }}

      - name: Build
        run: vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}
        env:
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID || vars.VERCEL_ORG_ID || 'team_ne7hiLb7J8wyHgGulNGIxGIz' }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID || vars.VERCEL_PROJECT_ID || 'prj_fZtOwXp0ToGe87kfUosIkQgXMEQY' }}

      - name: Deploy to Production
        run: vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }}
        env:
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID || vars.VERCEL_ORG_ID || 'team_ne7hiLb7J8wyHgGulNGIxGIz' }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID || vars.VERCEL_PROJECT_ID || 'prj_fZtOwXp0ToGe87kfUosIkQgXMEQY' }}
