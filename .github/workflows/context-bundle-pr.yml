name: PR Context Bundle

on:
  pull_request:
    types: [opened, reopened, synchronize, ready_for_review, edited]

permissions:
  contents: write
  pull-requests: write

jobs:
  bundle:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout PR branch
        uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref }}
          fetch-depth: 0

      # ⬇️ Replace this with your real generator; write to .tmp_new_context.md
      - name: Generate context (replace this step)
        run: |
          mkdir -p docs/context
          echo "# Context for PR #${{ github.event.number }}" > .tmp_new_context.md
          # your generator should append real content to .tmp_new_context.md

      # ✅ Commit ONLY if the file actually changed (Option C)
      - name: Check if context changed
        id: ctxdiff
        run: |
          set -e
          file="docs/context/PR-${{ github.event.number }}.md"
          if [ -f "$file" ]; then
            if diff -q "$file" .tmp_new_context.md >/dev/null; then
              echo "changed=false" >> $GITHUB_OUTPUT
            else
              mv .tmp_new_context.md "$file"
              echo "changed=true" >> $GITHUB_OUTPUT
            fi
          else
            mv .tmp_new_context.md "$file"
            echo "changed=true" >> $GITHUB_OUTPUT
          fi

      # 🔁 Write back to the PR branch ONLY (Option B2)
      - name: Commit context to PR branch
        if: steps.ctxdiff.outputs.changed == 'true'
        run: |
          git config user.name  "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add docs/context/PR-${{ github.event.number }}.md
          git commit -m "chore(context): update PR #${{ github.event.number }}"
          git push origin HEAD:${{ github.head_ref }}

      # 🔗 Upsert a single comment with evergreen & snapshot links
      - name: Comment links on PR
        if: always()
        uses: actions/github-script@v7
        with:
          script: |
            const pr = context.payload.pull_request;
            const owner = context.repo.owner;
            const repo  = context.repo.repo;
            const headRef = pr.head.ref;
            const headSha = pr.head.sha;
            const n = pr.number;
            const evergreen = `https://github.com/${owner}/${repo}/blob/${headRef}/docs/context/PR-${n}.md`;
            const snapshot  = `https://raw.githubusercontent.com/${owner}/${repo}/${headSha}/docs/context/PR-${n}.md`;
            const body = [
              `**Diff file generated ✅**`,
              ``,
              `Evergreen: ${evergreen}`,
              `Snapshot: ${snapshot}`,
              `File path: docs/context/PR-${n}.md`
            ].join('\n');
            const { data: comments } = await github.rest.issues.listComments({ owner, repo, issue_number: n });
            const mine = comments.find(c => c.user.type === 'Bot' && c.body?.includes('Diff file generated ✅'));
            if (mine) {
              await github.rest.issues.updateComment({ owner, repo, comment_id: mine.id, body });
            } else {
              await github.rest.issues.createComment({ owner, repo, issue_number: n, body });
            }
